<project name="Zimlet" default="package">

	<!--
	
		Use the target reload-zimlets-extra to build all the zimlets, both core and extra,
		install all the zimlets, then restart the tomcat.
		
	-->
	<property environment="env"/>

	<property name="deploy.dir" value="/opt/zimbra/tomcat/webapps"/>
	<property name="deploy.lib.path" value="/service/WEB-INF"/>
	<property name="deploy.jsp.path" value="/service/jsp"/>

	<property name="build.dir" location="build" />
	<property name="build.classes.dir" location="${build.dir}/classes" />
	<property name="dist.dir" location="${build.dir}/dist" />
	<property name="dist.conf.dir" location="${dist.dir}/conf" />
	<property name="dist.jsp.dir" location="${dist.dir}/jsp" />
	<property name="dist.lib.dir" location="${dist.dir}/lib" />
	<property name="dist.zimlet.dir" location="${dist.dir}/zimlets" />
	<property name="dist.zimlet-extra.dir" location="${dist.dir}/zimlets-extra" />

	<property name="server.jars.dir" location="../ZimbraServer/jars" />
	<property name="zimbrastore.jar" location="../ZimbraServer/build/dist/lib/jars/zimbrastore.jar" />
	<property name="jars.dir" location="jars" />
	<property name="config.dir" location="conf" />
	<property name="src.dir" location="src" />
	<property name="src.zimlet.dir" location="${src.dir}/zimlet" />
	<property name="src.java.dir" location="${src.dir}/java" />
	<property name="src.jsp.dir" location="${src.dir}/jsp" />

	<property name="deploy.host" value="localhost" />
	<property name="deploy.port" value="7070" />
	<property name="deploy.url" value="http://${deploy.host}:${deploy.port}/manager/" />

	<property name="generated.dir" location="${build.dir}/generated" />
	<property name="generated.java.dir" location="${generated.dir}/src/java" />

	<property name="zimlets" value="com_zimbra_xslt,com_zimbra_ymaps"/>
    <property name="zimlets-extra" value="com_zimbra_evite,com_zimbra_po,com_zimbra_bugz,com_flightexplorer_fasttrack,com_zimbra_travelagent,com_zimbra_arcade,com_zimbra_collector,com_zimbra_jspsample,com_zimbra_photo,com_zimbra_reminder,com_zimbra_ytraffic,com_zimbra_gtranslator,com_zimbra_sforce,com_zimbra_sms,com_zimbra_amzn,com_zimbra_wikipedia,com_zimbra_asterisk,com_zimbra_asteriskmwi"/>

	<condition property="is-windows">
		<os family="windows" />
	</condition>
	<condition property="is-unix">
		<not><os family="windows" /></not>
	</condition>

	<path id="all.java.path">
		<pathelement location="${src.java.dir}" />
		<pathelement location="${generated.java.dir}" />
	</path>
	<path id="class.path">
		<pathelement location="${build.classes.dir}" />
		<fileset dir="${jars.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${server.jars.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset file="${zimbrastore.jar}"/>
	</path>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="jars/ant-contrib-1.0b1.jar"/>
		</classpath>
	</taskdef>

	<target name="dev-sync" depends="jar">
		<copy verbose="true" todir="${deploy.dir}${deploy.jsp.path}">
			<fileset dir="${src.jsp.dir}"/>
		</copy>
		<copy verbose="true" todir="${deploy.dir}${deploy.lib.path}">
			<fileset dir="${config.dir}"/>
		</copy>
		<copy verbose="true" todir="${deploy.dir}${deploy.lib.path}/lib">
			<fileset dir="${dist.lib.dir}"/>
		</copy>
	</target>

	<target name="clean" description="Removes any temporary files">
		<delete dir="${build.dir}" />
	</target>

	<target name="build-init">
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${jars.dir}" />
		<mkdir dir="${dist.lib.dir}" />
		<mkdir dir="${dist.zimlet.dir}" />
		<mkdir dir="${dist.zimlet-extra.dir}" />
		<mkdir dir="${generated.java.dir}" />
	</target>

	<target name="compile" depends="build-init" description="Compiles the source code">
		<javac destdir="${build.classes.dir}" debug="true" classpathref="class.path">
			<src refid="all.java.path" />
		</javac>
	</target>

	<target name="package" depends="jar" description="Prepare distribution files">
		<copy todir="${dist.conf.dir}">
			<fileset dir="${config.dir}" includes="*"/>
		</copy>
	</target>

	<target name="jar" depends="compile" description="Creates the jar file">
		<jar destfile="${dist.lib.dir}/zimbrataglib.jar" basedir="${build.classes.dir}" />
	</target>

	<target name="reload-zimlets" depends="deploy-zimlets,restart-tomcat"/>
	<target name="reload-zimlets-extra" depends="deploy-zimlets-extra,restart-tomcat"/>

	<target name="package-zimlets" depends="build-init">
		<foreach list="${zimlets}" target="package-zimlet" param="zimlet"/>
		<foreach list="${zimlets-extra}" target="package-zimlet-extra" param="zimlet"/>
	</target>

	<target name="package-zimlet">
		<echo>${zimlet}</echo>
		<zip destfile="${dist.zimlet.dir}/${zimlet}.zip" update="true" >
			<fileset dir="${src.zimlet.dir}/${zimlet}" />
		</zip>
	</target>

	<target name="package-zimlet-extra">
		<echo>${zimlet}</echo>
		<zip destfile="${dist.zimlet-extra.dir}/${zimlet}.zip" update="true" >
			<fileset dir="${src.zimlet.dir}/${zimlet}" />
		</zip>
	</target>

	<target name="deploy-zimlets" depends="package-zimlets">
		<foreach list="${zimlets}" target="install-zimlet" param="zimlet">
			<param name="action" value="deploy"/>
			<param name="dir" value="${dist.zimlet.dir}"/>
		</foreach>
	</target>
	<target name="install-zimlets" depends="package-zimlets">
		<foreach list="${zimlets}" target="install-zimlet" param="zimlet">
			<param name="action" value="install"/>
			<param name="dir" value="${dist.zimlet.dir}"/>
		</foreach>
	</target>

	<target name="deploy-zimlets-extra" depends="deploy-zimlets">
		<foreach list="${zimlets-extra}" target="install-zimlet" param="zimlet">
			<param name="action" value="deploy"/>
			<param name="dir" value="${dist.zimlet-extra.dir}"/>
		</foreach>
	</target>
	<target name="install-zimlets-extra" depends="install-zimlets">
		<foreach list="${zimlets-extra}" target="install-zimlet" param="zimlet">
			<param name="action" value="install"/>
			<param name="dir" value="${dist.zimlet-extra.dir}"/>
		</foreach>
	</target>

	<target name="install-zimlet">
		<echo>${action} ${zimlet}</echo>
		<java classname="com.zimbra.cs.zimlet.ZimletUtil" fork="true" classpathref="class.path" failonerror="true">
			<arg line="-q" />
			<arg line="${action}" />
			<arg file="${dir}/${zimlet}.zip" />
		</java>
	</target>

	<!-- Tomcat service control -->
	<target name="restart-tomcat" depends="stop-tomcat,start-tomcat" />
	<target name="stop-tomcat" depends="stop-tomcat-windows,stop-tomcat-unix" />

	<target name="stop-tomcat-windows" if="is-windows">
		<exec executable="net">
			<arg value="stop" />
			<arg value="apache tomcat" />
		</exec>
		<!-- Wait for Tomcat to really go away. -->
		<echo>Waiting for tomcat to stop</echo>
		<waitfor checkevery="1" checkeveryunit="second" maxwait="10" maxwaitunit="second">
			<not><http url="http://${deploy.host}:${deploy.port}/" /></not>
		</waitfor>
	</target>

	<target name="stop-tomcat-unix" if="is-unix">
		<exec executable="${zimbra.home.dir}/bin/tomcat">
			<arg value="stop" />
		</exec>
	</target>

	<target name="start-tomcat" depends="start-tomcat-windows,start-tomcat-unix" />

	<target name="start-tomcat-windows" if="is-windows">
		<exec executable="net">
			<arg value="start" />
			<arg value="apache tomcat" />
		</exec>
	</target>

	<target name="start-tomcat-unix" if="is-unix">
		<exec executable="${zimbra.home.dir}/bin/tomcat">
			<arg value="start" />
		</exec>
	</target>
</project>
